service: lambda-deploy-serverless

useDotenv: true

frameworkVersion: '2'


provider:
  name: aws
  runtime: nodejs14.x
  region: ${opt:region, env:AWS_REGION}
  stage: ${opt:stage, 'local'}
  profile: serverlessUserProfile
  deploymentBucket:
    name: 1t21-aws-serverless-infra-dev
    blockPublicAccess: true
    maxPreviousDeploymentArtifacts: 5
  stackTags:
    app:environment: dev
    app:service: ${self:service}
    app:team: Capital
    app:contact: ompal.hitm09@gmail.com
  lambdaHashingVersion: 20201221
  endpointType: private
  iam:
    role:
      statements: # IAM role statements so that services can be accessed in the AWS account
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::sls-1t21-capital-infra-dev
            - ${cf:${self:custom.infraStack}.exportBucketArn}/*

        
  logRetentionInDays: 7
  
custom:
  infraStack: sls-1t21-capital-infra-dev

functions:
  hello:
    handler: handler.hello
    description: Handler for SVG to TIFF conversion
    memorySize: 4096 # in MB, equivalent to 4GB of heap size to handle possible large SVG file in-memory
    environment:
      FONTCONFIG_PATH: /var/task/fonts
      LOG_LEVELS: ${env:LOG_LEVELS}
      NO_COLOR: true # disable colored logging with Nest.js, which breaks CloudWatch display
      S3_EXPORT_BUCKET_NAME: ${cf:${self:custom.infraStack}.exportBucketName}
      STAGE: ${self:provider.stage}
    events:
      - s3:
          bucket: ${cf:${self:custom.infraStack}.exportBucketName}
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - suffix: .svg # Lambda triggers whenever a new file with suffix (.svg) extension is added
    timeout: 600 # 10 minutes
